import telebot as tb
import telebot.types as types
import camera
import utils
import time

import tokens

tconv = lambda x: time.strftime("%d-%m-%Y_%H-%M-%S", time.localtime(x))

API_TOKEN = tokens.bot

bot = tb.TeleBot(API_TOKEN)

@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.send_message(message.chat.id, """\
ü¶é GekkoWatch ü¶é
–ö–æ—Ä–æ—á–µ –Ω–∞–±–ª—é–¥–∞—é –∑–∞ –ê—Ä–∞—Ö–∏—Å–æ–º, –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç—É –¥–æ–º–∞ üòÅ

üëÄ –ö–æ–º–∞–Ω–¥—ã:
/photo - —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ
/video - –∑–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ
        
–î–∞, –∑–≤—É–∫–∞ –≤ –≤–∏–¥–µ–æ –Ω–µ—Ç—É, –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π –ø–æ—á–µ–º—É. ü§®
""", reply_markup = '')
    
@bot.message_handler(commands=['photo'])
def send_photo(message):
    bot.send_message(message.chat.id, '–î–µ–ª–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é üì∏, —Å–µ–∫—É–Ω–¥—É')
    result, name = camera.capture_photo(f'{message.chat.id}_{tconv(message.date)}.png')
    if result:
        file = open(name, 'rb')
        bot.send_message(message.chat.id, '–í–æ—Ç —Ñ–æ—Ç–æ')
        bot.send_photo(message.chat.id, file)
        # camera.remove(name)
    if result == camera.CAMERA_CAPTURE_ERROR:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –∫–∞–º–µ—Ä—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
    if result == camera.CAMERA_CAPTURE_ERROR_BUSY:
        bot.send_message(message.chat.id, '–ö–∞–º–µ—Ä–∞ —Å–µ–π—á–∞—Å –∑–∞–Ω—è—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
        
@bot.message_handler(commands=['video'])
def ask_lenght(message):
    length_keyboard = tb.types.ReplyKeyboardMarkup()
    but5 = types.KeyboardButton('5')
    but10 = types.KeyboardButton('10')
    but15 = types.KeyboardButton('15')
    but30 = types.KeyboardButton('30')
    length_keyboard.add(but5, but10)
    length_keyboard.add(but15, but30)
    bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∑–∞–ø–∏—Å–∞—Ç—å? ‚è≤', reply_markup=length_keyboard)
    bot.register_next_step_handler(message, send_video)

def send_video(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ –¥–ª–∏–Ω—ã –≤–∏–¥–µ–æ
    res, length = utils.convertStr(message.text)
    if res:
        if length < 1:
            bot.send_message(message.chat.id, f'ü§®ü§®ü§®', reply_markup = types.ReplyKeyboardRemove())
            return
        if length > 60:
            bot.send_message(message.chat.id, f'–£ –º–µ–Ω—è –Ω–µ—Ç—É –¥–∞—Ç–∞—Ü–µ–Ω—Ç—Ä–∞ –¥–ª—è –≤—Å–µ—Ö —ç—Ç–∏—Ö –≤–∏–¥–µ–æ, –¥–∞–≤–∞–π –ø–æ–∫–æ—Ä–æ—á–µ —Ç–∞–º', reply_markup = types.ReplyKeyboardRemove())
            return
        # –ó–∞–ø–∏—Å—å –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
        bot.send_message(message.chat.id, 'üî¥ –ó–∞–ø–∏—Å—ã–≤–∞—é –≤–∏–¥–µ–æ', reply_markup = types.ReplyKeyboardRemove())
        result, name = camera.capture_video(f'{message.chat.id}_{tconv(message.date)}.mp4', length)
        if result:
            bot.send_message(message.chat.id, '‚úÖ –ì–æ—Ç–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤–ª—è—é')
            file = open(name, 'rb')
            bot.send_video(message.chat.id, file)
            # camera.remove(name)
        if result == camera.CAMERA_CAPTURE_ERROR:
            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –∫–∞–º–µ—Ä—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
        if result == camera.CAMERA_CAPTURE_ERROR_BUSY:
            bot.send_message(message.chat.id, '–ö–∞–º–µ—Ä–∞ —Å–µ–π—á–∞—Å –∑–∞–Ω—è—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
    else: 
        bot.send_message(message.chat.id, f'–ù—É —Ç—ã —Ç–∞–∫–æ–π —Å–º–µ—à–Ω–æ–π, —è –Ω–µ –º–æ–≥—É. –°–∞–º –∑–∞–ø–∏—Å—ã–≤–∞–π –≤–∏–¥–µ–æ –≤ "{message.text}" —Å–µ–∫—É–Ω–¥', reply_markup = types.ReplyKeyboardRemove())

@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.reply_to(message, message.text)


if __name__ == '__main__':
    print('Starting bot...')
    bot.infinity_polling()

